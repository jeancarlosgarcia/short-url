// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "short-url/models"
)

// IUrlRepository is an autogenerated mock type for the IUrlRepository type
type IUrlRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, shortURL
func (_m *IUrlRepository) Delete(ctx context.Context, shortURL string) error {
	ret := _m.Called(ctx, shortURL)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, shortURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: ctx, shortURL
func (_m *IUrlRepository) Get(ctx context.Context, shortURL string) (string, error) {
	ret := _m.Called(ctx, shortURL)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, shortURL)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, shortURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, shortURL
func (_m *IUrlRepository) Save(ctx context.Context, shortURL *models.ShortURL) error {
	ret := _m.Called(ctx, shortURL)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.ShortURL) error); ok {
		r0 = rf(ctx, shortURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
