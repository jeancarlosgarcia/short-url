// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"
	api "short-url/models/api"

	mock "github.com/stretchr/testify/mock"
)

// IUrlService is an autogenerated mock type for the IUrlService type
type IUrlService struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, request
func (_m *IUrlService) Create(ctx context.Context, request *api.URLCreate) api.URLCreated {
	ret := _m.Called(ctx, request)

	var r0 api.URLCreated
	if rf, ok := ret.Get(0).(func(context.Context, *api.URLCreate) api.URLCreated); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(api.URLCreated)
	}

	return r0
}

// Delete provides a mock function with given fields: ctx, shortURL
func (_m *IUrlService) Delete(ctx context.Context, shortURL string) error {
	ret := _m.Called(ctx, shortURL)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, shortURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetOriginal provides a mock function with given fields: ctx, shortURL
func (_m *IUrlService) GetOriginal(ctx context.Context, shortURL string) (string, error) {
	ret := _m.Called(ctx, shortURL)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, shortURL)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, shortURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
